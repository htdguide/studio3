Team 2 
Dumplings shop

Tools selection result:
Task Manager - GitHub Projects
Version Control System - GitHub
IDE - Visual Studio Code
Server handler - React

Contributors:
Gagandeep Kaur - Designer
Sahil Kakadiya - Senior Developer
Nikita Mogilevskii - Scrum Master
Nijendra Giri - Backend Developer
Abishek Choundary - Software Tester

OUR STANDARDS:
- CODE READABILITY
- TEAMWORK
- EQUALITY OF THE CONTRIBUTION
- FEEDBACK
- DOCUMENTATION READABILITY
- AGILE USAGE
-----------------------------------------------------------------------------------------------

15/02/2024 summary:

Our discussion was about the fundamentals of our project. Our project is a food shop focused on dumplings sales. It should have an accounting system with different types of users:
-	Seller or Merchant
-	Customer
-	Administrator

We did a brainstorm and wrote some of the scenarios for our project that it should handle.
After talking with Tariq we decided to use JavaScript and React in our app. For databases, we will use Firebase.


------------------------------------------------------------------------------------------------

16/02/2024 summary:

After our team chats about our food shop project, we're all on board with using an Entity-Relationship Diagram (ERD). 

Seeing How Things Connect:
ERD helps us draw lines between different parts of our project, like sellers, customers, and administrators. It's like a map showing how everything is linked.

Talking the Same Language:
Think of ERD as a language we all get. Whether you're a developer or not, looking at the diagram helps everyone understand our project plan.

Planning our Database:
ERD is like planning where to put each piece of information. It's our blueprint for the database, making sure things are organized and easy to find.

Focusing on What Matters:
It helps us figure out what's important for our project. Like, who are the main players (sellers, customers, administrators), and what details do we need about each of them.

Keeping Things Neat:
ERD is like organizing our stuff so that our project works faster and smoother. It makes sure we don't waste space or make things messy.

Getting Ready for the Future:
It helps us think about what might come next. ERD is like a plan that makes sure our project can grow without causing problems.

Fixing Problems Easier:
ERD is like a guide when things go wrong. It helps us find and fix issues quickly, making sure our project stays healthy over time.

In a nutshell, we're all in agreement that using ERD is like having a smart map for our food shop project â€“ it helps us build and maintain things smoothly.

PULL REQUEST Hometask
Using an Entity-Relationship Diagram (ERD) for our food shop project is like having a smart map. It helps us understand how different parts connect, ensures everyone speaks the same language, and acts as a blueprint for organizing our database. ERD focuses on what matters, keeps things neat, prepares us for the future, and makes problem-solving easier. 
In essence, it's our guide to building and maintaining a smooth-running project.

ACTIONS BEFORE THE NEXT STAND-UP SESSION
Hours 
[NIJENDRA] Find demos that illustrate idea 
[SAHIL] Find out the types of ERD diagrams
[ABHISHEK] Figure out how many users should be in the ERD
[GAGANDEEP] Figure out user cases
[NIKITA] Find a tool for ERD Diagram Creation
[ALL TEAM] Describe our future ERD diagram


-----------------------------------------------------------------------------------------------------------------

22/02/2024 summary:

We discussed our homework about pull requests, which is copying one branch to another branch.

Sahil brought information about types of diagrams like Entity Relationship, Conceptual, Logical, Physical, Crow's Foot Notation, Chen Notation, and UML Class Diagrams. 
Nikita found some of the tools to implement some of these diagrams and the team decided to choose draw.io. Abhishek found how many users should be in the ERD and drew a simple demo of the diagram.
After today's standup meeting, we choose your diagram creation software. After checking all of the types of diagrams we decided to draw a Logical diagram. 
Abishek drew a non-typed demo diagram to show our ideas simply.
Gagandeep's report consists of different types of usercases which are very handy when it comes to ERD development.


ACTIONS BEFORE THE NEXT STAND-UP SESSION

[Nijendra]
Task: Find demos that illustrate the conceptual ideas.
Breakdown:
Search for relevant demos showcasing key concepts.
Compile a list of demos that align with the team's vision.
Ensure that the selected demos effectively illustrate the intended ideas.

[Sahil]
Task: Find out the types of ERD diagrams.
Breakdown:
Research and identify various types of Entity-Relationship Diagrams (ERD).
Provide a concise overview of each type.
Highlight the characteristics and use cases of different ERD types.

[Abhishek]
Task: Figure out how many users should be in the ERD.
Breakdown:
Analyze the scope and requirements of the project.
Determine the appropriate number of users to be represented in the ERD.
Ensure that the user count accurately reflects the system's user base.

[Gagandeep]
Task: Figure out user cases.
Breakdown:
Identify key user cases relevant to the project.
Document scenarios illustrating interactions between users and the system.
Provide a clear understanding of user behaviors and system responses.

[Nikita]
Task: Find a tool for ERD Diagram Creation.
Breakdown:
Research and evaluate ERD diagram creation tools.
Recommend a suitable tool based on features and usability.
Share insights on the chosen tool to facilitate team decision-making.

[All Team]
Task: Describe our future ERD diagram.
Breakdown:
Collaboratively discuss and define the key components of the future ERD.
Ensure that the description encompasses the collective vision of the team.
Provide input and feedback to create a comprehensive representation.

-------------------------------------------------------------------------------------------------------------------------------

23/02/2024 summary:

We drew a simple database concept:

+-------------------+      +----------------+      +----------------+
|   Customers      |      |      Menu      |      |      Cart      |
+-------------------+      +----------------+      +----------------+
| CustomerID (PK)  |      | DishID (PK)    |      | CartID (PK)    |
| FirstName         |      | DishName       |      | CustomerID (FK)|
| LastName          |      | Description    |      | DishID (FK)    |
| Email             |      | Price          |      | Quantity       |
| Address           |      +----------------+      | TotalPrice     |
| PhoneNumber       |                             +----------------+
+-------------------+

The team has been actively working on their assigned tasks to ensure a productive stand-up session. Each member has contributed towards the overall goal of advancing our understanding of ERD diagrams and preparing relevant materials for the upcoming presentation.

Nijendra:
Successfully identified and compiled demos that effectively illustrate our ideas.
Prepared to showcase the practical application of our concepts during the stand-up.

Sahil:
Investigated and provided a comprehensive overview of the various types of Entity-Relationship Diagrams (ERD).
Shared insights into the appropriateness of different ERD types based on our project requirements.

Abhishek:
Analyzed the scope of our project to determine the number of users to be represented in the ERD.
Ensured that the ERD accurately reflects the user base for a more precise representation of our system.

Gagandeep:
Explored and documented user cases to enrich our understanding of how the system interacts with different user roles.
Prepared to discuss and clarify user scenarios during the stand-up.

Nikita:
Researched and recommended a suitable tool for ERD diagram creation.
Shared insights into the features and functionalities of the selected tool for the team's consideration.

All Team:
Collaboratively worked on describing the future ERD diagram.
Shared thoughts and insights during team discussions to ensure a comprehensive understanding of our ERD representation.

Next Steps:
Schedule a brief team meeting before the stand-up to align on findings and ensure a cohesive presentation.
Address any questions or concerns raised during the stand-up to refine our approach further.

Tasks before next stand:
[Nijendra]
Task: Rearrange backlog, move user stories somewhere else and reformat the backlog according to instructions given.

[Sahil]
Task: Fill the backlog with the information about the tasks done.

[Abhishek]
Task: Start wireframe creation, use figma.

[Gagandeep]
Task: Fill the backlog with the information about tasks in the future.


